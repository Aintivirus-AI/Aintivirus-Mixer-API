/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MerkleTreeWithHistory,
  MerkleTreeWithHistoryInterface,
} from "../../AintiVirusMixer.sol/MerkleTreeWithHistory";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_levels",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "_hasher",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "LeafInsertedETH",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "leaf",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "LeafInsertedSOL",
    type: "event",
  },
  {
    inputs: [],
    name: "FIELD_SIZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROOT_HISTORY_SIZE",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TREE_DEPTH",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZERO_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndexETH",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRootIndexSOL",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "filledSubtreesETH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "filledSubtreesSOL",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastETHRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastSOLRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hasher",
    outputs: [
      {
        internalType: "contract IPoseidon",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownETHRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "isKnownSOLRoot",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "levels",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndexETH",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextIndexSOL",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "rootsETH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "rootsSOL",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610f99380380610f9983398181016040528101906100329190610398565b60008263ffffffff161180156100555750601f63ffffffff168263ffffffff1611155b610094576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161008b90610435565b60405180910390fd5b8163ffffffff1660a08163ffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505060005b60a05163ffffffff168163ffffffff16101561016657600061010c8263ffffffff166101d560201b60201c565b60001b9050806000808463ffffffff1663ffffffff1681526020019081526020016000208190555080600360008463ffffffff1663ffffffff168152602001908152602001600020819055505080806001019150506100df565b50600061018c600160a05161017b9190610484565b63ffffffff166101d560201b60201c565b60001b905080600160008063ffffffff1681526020019081526020016000208190555080600460008063ffffffff16815260200190815260200160002081905550505050610651565b6000601f63ffffffff168210610220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021790610508565b60405180910390fd5b60007f15c32d32cc07c0842044f25b0b6ea9a068c9c05e2f9e0af3dbaaa8d3329943b9905060005b838110156102ef5760805173ffffffffffffffffffffffffffffffffffffffff166329a5f2f66040518060400160405280858152602001858152506040518263ffffffff1660e01b815260040161029f91906105dd565b602060405180830381865afa1580156102bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e09190610624565b91508080600101915050610248565b5080915050919050565b600080fd5b600063ffffffff82169050919050565b610317816102fe565b811461032257600080fd5b50565b6000815190506103348161030e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103658261033a565b9050919050565b6103758161035a565b811461038057600080fd5b50565b6000815190506103928161036c565b92915050565b600080604083850312156103af576103ae6102f9565b5b60006103bd85828601610325565b92505060206103ce85828601610383565b9150509250929050565b600082825260208201905092915050565b7f496e76616c696420747265652064657074680000000000000000000000000000600082015250565b600061041f6012836103d8565b915061042a826103e9565b602082019050919050565b6000602082019050818103600083015261044e81610412565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061048f826102fe565b915061049a836102fe565b9250828203905063ffffffff8111156104b6576104b5610455565b5b92915050565b7f496e646578206f7574206f662072616e67650000000000000000000000000000600082015250565b60006104f26012836103d8565b91506104fd826104bc565b602082019050919050565b60006020820190508181036000830152610521816104e5565b9050919050565b600060029050919050565b600081905092915050565b6000819050919050565b6000819050919050565b61055b81610548565b82525050565b600061056d8383610552565b60208301905092915050565b6000602082019050919050565b61058f81610528565b6105998184610533565b92506105a48261053e565b8060005b838110156105d55781516105bc8782610561565b96506105c783610579565b9250506001810190506105a8565b505050505050565b60006040820190506105f26000830184610586565b92915050565b61060181610548565b811461060c57600080fd5b50565b60008151905061061e816105f8565b92915050565b60006020828403121561063a576106396102f9565b5b60006106488482850161060f565b91505092915050565b60805160a05161092361067660003960006104590152600061057801526109236000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063aa223a18116100a2578063dbcb583b11610071578063dbcb583b1461030d578063ec7329591461032b578063ed33639f14610349578063eeb037dc14610367578063f16505361461038557610116565b8063aa223a1814610271578063aedd8116146102a1578063b40a8cc1146102d1578063cd87a3b4146102ef57610116565b8063414a37ba116100e9578063414a37ba146101c95780634ecf518b146101e75780637a8b53991461020557806399a29f5714610223578063a47161871461025357610116565b8063028c6d6f1461011b57806305e5982114610139578063381c7b7e146101695780633c405c6014610199575b600080fd5b6101236103a3565b6040516101309190610676565b60405180910390f35b610153600480360381019061014e91906106d2565b6103dc565b6040516101609190610676565b60405180910390f35b610183600480360381019061017e91906106d2565b6103f4565b6040516101909190610676565b60405180910390f35b6101b360048036038101906101ae919061072b565b61040c565b6040516101c09190610773565b60405180910390f35b6101d1610433565b6040516101de91906107a7565b60405180910390f35b6101ef610457565b6040516101fc91906107d1565b60405180910390f35b61020d61047b565b60405161021a9190610676565b60405180910390f35b61023d6004803603810190610238919061072b565b6104b4565b60405161024a9190610773565b60405180910390f35b61025b6104db565b60405161026891906107d1565b60405180910390f35b61028b600480360381019061028691906106d2565b6104f1565b6040516102989190610676565b60405180910390f35b6102bb60048036038101906102b691906106d2565b610509565b6040516102c89190610676565b60405180910390f35b6102d9610521565b6040516102e691906107d1565b60405180910390f35b6102f7610537565b60405161030491906107d1565b60405180910390f35b61031561053c565b60405161032291906107d1565b60405180910390f35b610333610552565b60405161034091906107a7565b60405180910390f35b610351610576565b60405161035e919061086b565b60405180910390f35b61036f61059a565b60405161037c91906107d1565b60405180910390f35b61038d6105b0565b60405161039a91906107d1565b60405180910390f35b600060046000600560009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002054905090565b60016020528060005260406000206000915090505481565b60036020528060005260406000206000915090505481565b600061042c826001600260009054906101000a900463ffffffff166105b5565b9050919050565b7f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000181565b7f000000000000000000000000000000000000000000000000000000000000000081565b600060016000600260009054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200190815260200160002054905090565b60006104d4826004600560009054906101000a900463ffffffff166105b5565b9050919050565b600560009054906101000a900463ffffffff1681565b60006020528060005260406000206000915090505481565b60046020528060005260406000206000915090505481565b600260049054906101000a900463ffffffff1681565b601e81565b600260009054906101000a900463ffffffff1681565b7f15c32d32cc07c0842044f25b0b6ea9a068c9c05e2f9e0af3dbaaa8d3329943b981565b7f000000000000000000000000000000000000000000000000000000000000000081565b600560049054906101000a900463ffffffff1681565b601f81565b60008060001b84036105ca5760009050610656565b600082905060005b601e63ffffffff1681101561064f57858560008463ffffffff1663ffffffff168152602001908152602001600020540361061157600192505050610656565b60008263ffffffff16146106315760018261062c91906108b5565b610640565b6001601e61063f91906108b5565b5b915080806001019150506105d2565b5060009150505b9392505050565b6000819050919050565b6106708161065d565b82525050565b600060208201905061068b6000830184610667565b92915050565b600080fd5b600063ffffffff82169050919050565b6106af81610696565b81146106ba57600080fd5b50565b6000813590506106cc816106a6565b92915050565b6000602082840312156106e8576106e7610691565b5b60006106f6848285016106bd565b91505092915050565b6107088161065d565b811461071357600080fd5b50565b600081359050610725816106ff565b92915050565b60006020828403121561074157610740610691565b5b600061074f84828501610716565b91505092915050565b60008115159050919050565b61076d81610758565b82525050565b60006020820190506107886000830184610764565b92915050565b6000819050919050565b6107a18161078e565b82525050565b60006020820190506107bc6000830184610798565b92915050565b6107cb81610696565b82525050565b60006020820190506107e660008301846107c2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061083161082c610827846107ec565b61080c565b6107ec565b9050919050565b600061084382610816565b9050919050565b600061085582610838565b9050919050565b6108658161084a565b82525050565b6000602082019050610880600083018461085c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108c082610696565b91506108cb83610696565b9250828203905063ffffffff8111156108e7576108e6610886565b5b9291505056fea2646970667358221220ee386ee6c6453cd002c504f582d40e3613cc61ec342f1698612c1ae18789541264736f6c634300081c0033";

type MerkleTreeWithHistoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleTreeWithHistoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleTreeWithHistory__factory extends ContractFactory {
  constructor(...args: MerkleTreeWithHistoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _levels: BigNumberish,
    _hasher: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_levels, _hasher, overrides || {});
  }
  override deploy(
    _levels: BigNumberish,
    _hasher: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_levels, _hasher, overrides || {}) as Promise<
      MerkleTreeWithHistory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): MerkleTreeWithHistory__factory {
    return super.connect(runner) as MerkleTreeWithHistory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleTreeWithHistoryInterface {
    return new Interface(_abi) as MerkleTreeWithHistoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MerkleTreeWithHistory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as MerkleTreeWithHistory;
  }
}
